% getFinancialStocksData% 21/05/2021function [financialData] = getFinancialStocksData(varargin)     for i = 1 : 2 : numel(varargin)         switch varargin{i}            case 'financialFile'                financialFile = varargin{i+1};            case 'stockPriceFile'                stockPriceFile = varargin{i+1};            case 'stockInfoFile'                stockInfoFile = varargin{i+1};                otherwise                error(['Unexpected option: ' varargin{i}])        end      end        % Define financial data structure    financialData = struct("ticker", [], "data", [], "totalAssets", [],...                           "totalEquityGrossMinorityInterest", [],...                           "commonStockEquity", [], "netDebt", [],...                           "netIncomeFromContinuingAndDiscontinuedOperation", [],...                           "netInterestIncome", [], "freeCashFlow", [],...                           "price", [], "numStocks", []);        % Get financial data    [numArr, txtArr, rawArr, limits] = xlsread(financialFile, 'Sheet1');    symbol = {rawArr{:,3}};        % Get price data    [numArrPrice, txtArrPrice, rawArrPrice, limitsPrice] = xlsread(stockPriceFile, 'Sheet1');    symbolPrice = {rawArrPrice{:,3}};        % Get info data    [numArrInfo, txtArrInfo, rawArrInfo, limitsInfo] = xlsread(stockInfoFile, 'Sheet1');    symbolInfo = {rawArrInfo{:,1}};        ticker = unique(symbol(2:end));    for i = 1 : length(ticker)        financialData.ticker{i} = ticker{i};        index = find(strcmpi(ticker{i}, symbol), 1, 'first');        indexPrice = find(strcmpi(ticker{i}, symbolPrice), 1, 'first');        indexInfo = find(strcmpi(ticker{i}, symbolInfo), 1, 'first');        financialData.data{i} = rawArr{index, 4};        financialData.totalAssets{i} = rawArr{index,5};        financialData.totalEquityGrossMinorityInterest{i}  = rawArr{index,7};        financialData.commonStockEquity{i} = rawArr{index,9};        financialData.netDebt{i} = rawArr{index,16};        financialData.netIncomeFromContinuingAndDiscontinuedOperation{i} = rawArr{index,34};        financialData.netInterestIncome{i} = rawArr{index,38};        financialData.freeCashFlow{i} = rawArr{index,57};        financialData.price{i} = rawArrPrice{indexPrice, 5};        financialData.numStocks{i} = rawArrInfo{indexInfo, 2};      end  end