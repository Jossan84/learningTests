%% File : SfcnProcessFunction.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for SfcnProcessFunction
%%
%% Simulink version      : 8.7 (R2016a) 10-Feb-2016
%% TLC file generated on : 06-Jul-2020 16:34:40

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'SfcnProcessFunction';
     def.InitializeConditionsFcnSpec = 'void ProcessFunctionInit()';
     def.OutputFcnSpec = 'void ProcessFunction(double u1[1], double u2[1], double y1[2], double y2[1])';
     def.HeaderFiles = {'ProcessFunction.h'};
     def.SourceFiles = {'ProcessFunction.c'};
     def.HostLibFiles = {'sumDouble_rtwlib'};
     def.TargetLibFiles = {'sumDouble_rtwlib'};
     def.IncPaths = {'E:\Develop\Workspace_Matlab\TestSFunctionSimulinkLib\libs\windowsSDK\include', 'E:\Develop\Workspace_Matlab\TestSFunctionSimulinkLib\SFunction'};
     def.SrcPaths = {'E:\Develop\Workspace_Matlab\TestSFunctionSimulinkLib\SFunction'};
     def.LibPaths = {'E:\Develop\Workspace_Matlab\TestSFunctionSimulinkLib\libs\windowsSDK\lib'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
 %/

%implements SfcnProcessFunction "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C
  %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
  %endif

  %<LibAddToCommonIncludes("ProcessFunction.h")>
  %<SLibAddToStaticSources("ProcessFunction.c")>

  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: InitializeConditions  ========================================
%%
%function InitializeConditions (block, system) Output
  %%
  %%
    /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
  ProcessFunctionInit();
  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
  %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
  %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
  %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
  %%
  ProcessFunction( (real_T*)%<u1_ptr>, (real_T*)%<u2_ptr>, %<y1_ptr>, %<y2_ptr>);
  %%
%endfunction

%% [EOF]
